# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  name: Anushrut-SHA-Pool

stages:
  - stage: Terraform_Init   # Spaces not allowed in stage and job names
    jobs:
      - job: TerraformInit_Job
        displayName: Terraform Init-Job
        steps:

        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/parent-module/env-dev'
            backendServiceArm: 'Practice-Service-Connection-2-own'
            backendAzureRmOverrideSubscriptionID: 'e59b3be3-2cd8-493e-a182-a6b8da13eccc'
            backendAzureRmResourceGroupName: 'RG_Anu'
            backendAzureRmStorageAccountName: 'storageaccountanu1'
            backendAzureRmContainerName: 'pipelingpracticecontainer'
            backendAzureRmKey: 'pipelinestatefile'

        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'custom'
            workingDirectory: '$(System.DefaultWorkingDirectory)/parent-module/env-dev'
            outputTo: 'console'
            customCommand: 'fmt'
            environmentServiceNameAzureRM: 'Practice-Service-Connection-2-own'
            environmentAzureRmOverrideSubscriptionID: 'e59b3be3-2cd8-493e-a182-a6b8da13eccc'
        
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'validate'
            workingDirectory: '$(System.DefaultWorkingDirectory)/parent-module/env-dev'

        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/parent-module/env-dev'
            environmentServiceNameAzureRM: 'Practice-Service-Connection-2-own'